name: Deploy images to GHCR

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      actions: read
      checks: read
      deployments: read
      id-token: read
      pull-requests: read
      repository-projects: read
      statuses: read

    steps:
      - name: "Checkout"
        uses: actions/checkout@main

      - name: "Login to GitHub Container Registry"
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for web container
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ github.actor }}/proxycroak-web

      - name: Build and push Docker web image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.actor }}/proxycroak-web:latest
          labels: ${{ steps.meta.outputs.labels }}


      - name: Extract metadata (tags, labels) for nginx container
        id: metatwo
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ github.actor }}/proxycroak-nginx


      - name: Build and push Docker nginx image
        uses: docker/build-push-action@v4
        with:
          context: nginx
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.actor }}/proxycroak-nginx:latest
          labels: ${{ steps.metatwo.outputs.labels }}


      - name: Extract PR Info
        uses: 8BitJonny/gh-get-current-pr@master
        id: PR
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          sha: ${{ github.event.pull_request.head.sha }}
          filterOutClosed: false
          filterOutDraft: true


      - name: Send Discord notification
        if: success() && steps.PR.outputs.number
        env:
          prTitle: ${{ steps.PR.outputs.pr_title }}
          prBody: ${{ steps.PR.outputs.pr_body }}

        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          content: "<@&1190582363340685424> **New release!**"
          embed-title: "Proxycroak ${{env.prTitle}}"
          embed-description: "${{env.prBody}}"
          embed-url: "https://proxycroak.com/changelog#${{env.prTitle}}"
          embed-thumbnail-url: "https://proxycroak.com/static/img/favicons/favicon-196x196.png"
          embed-color: "5763719"

